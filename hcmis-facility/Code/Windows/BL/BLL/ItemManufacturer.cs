
// Generated by MyGeneration Version # (1.3.0.3)

using System;
using DAL;
using System.Data;
namespace BLL
{
	public class ItemManufacturer : _ItemManufacturer
	{
		public ItemManufacturer()
		{
		
		}
        public DataTable GetAllLevels
        {
            get {
                string query = "SELECT DISTINCT (PackageLevel), ('Level ' + cast(PackageLevel AS varchar)) AS Level FROM ItemManufacturer";
                this.LoadFromRawSql(query);
                return this.DataTable;
            }
        }
        public void LoadManufacturersFor(int item)
        {
            this.FlushData();
            String query = String.Format("select distinct(ManufacturerID), Name from ItemManufacturer im join Manufacturers m on im.ManufacturerID = m.ID where ItemID = {0}",item);
            this.LoadFromRawSql(query);
        }

        

        public void LoadManufacturerItemRelationsFor(int item, int manufactuerer)
        {
            this.FlushData();
            String query = String.Format("select * , 'Level ' + CAST(PackageLevel AS VarChar ) as PLevel from ItemManufacturer where ItemID = {0} and ManufacturerID = {1}", item, manufactuerer);
            this.LoadFromRawSql(query);
        }

        public void LoadManufacturerItemRelationsFor(int item, int manufactuerer, int level)
        {
            this.FlushData();
            String query = String.Format("select * , 'Level ' + CAST(PackageLevel AS VarChar ) as PLevel from ItemManufacturer where ItemID = {0} and ManufacturerID = {1} and PackageLevel = {2}", item, manufactuerer,level);
            this.LoadFromRawSql(query);
        }

        public void SaveReceivingDefault(bool isDefault)
        {
            if (isDefault || (this.RecevingDefault != isDefault))
            {
                int id = this.ID;
                this.LoadFromRawSql(String.Format("Update ItemManufacturer set RecevingDefault = 0 where ItemID = {0} and ManufacturerID = {1}", this.ItemID, this.ManufacturerID));
                this.LoadByPrimaryKey(id);
                this.RecevingDefault = isDefault;
                this.Save();
            }
        }

        public void LoadDefaultReceiving(int itemid, int manufid)
        {
            this.FlushData();
            String query = String.Format("select * from ItemManufacturer where ItemID = {0} and ManufacturerID = {1} and RecevingDefault = 1", itemid, manufid);
            this.LoadFromRawSql(query);
        }

        public int QuantityInBasicUnit
        {
            get {
                int id = this.ID;
                int q = 1;
                ItemManufacturer im = new ItemManufacturer();
                im.LoadManufacturerItemRelationsFor(this.ItemID, this.ManufacturerID);
                while (!im.EOF && im.PackageLevel <= this.PackageLevel)
                {
                    q *= im.QuantityPerLevel;
                    im.MoveNext();
                }
                return q;
            }
        }

        public void LoadIMbyLevel(int itemID, int manufID, int plevel)
        {
            this.FlushData();
            String query = String.Format("select * from ItemManufacturer where ItemID = {0} and ManufacturerID = {1} and PackageLevel = {2}", itemID, manufID,plevel);
            this.LoadFromRawSql(query);
        }

        public void LoadLevelsFor(int itemID, int manufID)
        {
            string query = String.Format("SELECT DISTINCT (PackageLevel), ('Level ' + cast(PackageLevel AS varchar)) AS Level FROM ItemManufacturer where ItemID = {0} and ManufacturerID = {1}",itemID,manufID);
            this.LoadFromRawSql(query);
        }
    }
}
