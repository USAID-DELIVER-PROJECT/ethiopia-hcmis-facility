
// Generated by MyGeneration Version # (1.3.0.3)

using System;
using System.Data;
using DAL;

namespace BLL
{
	public class Product : _Product
	{
		public Product()
		{
		
		}

        /// <summary>
        /// Loads the Products by the mapping ID and returns the ID
        /// Note: The ATC Column has been used for the puspose of mapping
        /// </summary>
        /// <param name="mappingID"></param>
        /// <returns>The ID of the Product table</returns>
        public int LoadByMappingID(int mappingID)
        {
            this.FlushData();
            this.Where.ATC.Value = mappingID.ToString();
            this.Query.Load();
            if(this.RowCount>0)
            {
                return this.ID;
            }
            else
            {
                return -1;
            }
        }

        public bool IsMapped
        {
            get { return !this.IsColumnNull("ATC"); }
        }


        public DataTable GetInnForItem()
        {
            this.FlushData();
            this.Where.WhereClauseReset();
            this.Where.TypeID.Value = 1;
            this.Query.Load();
            return this.DataTable;
        }

        public DataTable GetInnForSupply()
        {
            //TODO: Remove this hardcoded piece of code
            string query = string.Format("select * from Product where TypeID not in (1,7)");
            this.LoadFromRawSql(query);
            return this.DataTable;
        }

        public DataTable GetAllProduct()
        {
            this.FlushData();
            this.LoadFromRawSql(String.Format("SELECT * FROM vwGetProducts"));
            return this.DataTable;
        }

        public DataTable GetProductById(int productId)
        {
            this.FlushData();
            this.LoadFromRawSql(String.Format("SELECT * FROM vwGetProductByCategory WHERE ID = {0}", productId));
            return this.DataTable;
        }

        public DataTable GetProductBySubCategory(int subCategoryId)
        {
            this.FlushData();
            this.LoadFromRawSql(String.Format("SELECT * FROM vwGetProductByCategory WHERE SubCategoryID = {0}", subCategoryId));
            return this.DataTable;
        }

        public DataTable GetProductByCategory(int categoryId)
        {
            this.FlushData();
            this.LoadFromRawSql(String.Format("SELECT * FROM vwGetProductByCategory WHERE CategoryId = {0}", categoryId));
            return this.DataTable;
        }
      

	}
}
