
// Generated by MyGeneration Version # (1.3.0.3)

using System;
using DAL;
using System.Data;

namespace BLL
{
	public class ProgramProduct : _ProgramProduct
	{
		public ProgramProduct()
		{
		
		}

        public bool CheckIfExists(int itemId, int programId)
        {
            bool exist = false;
            this.FlushData();
            this.Where.WhereClauseReset();
            this.Where.ItemID.Value = itemId;
            this.Where.ProgramID.Conjuction = MyGeneration.dOOdads.WhereParameter.Conj.And;
            this.Where.ProgramID.Value = programId;
            this.Query.Load();
            if (this.DataTable.Rows.Count > 0)
                exist = true;

            return exist;
        }

        public void DeleteAllProgramsForItem(int itemId)
        {
            this.FlushData();
            this.Where.WhereClauseReset();
            this.Where.ItemID.Value = itemId;
            this.Query.Load();
            foreach (DataRowView dv in this.DataTable.DefaultView)
            {
                this.LoadByPrimaryKey(Convert.ToInt32(dv["ID"]));
                this.MarkAsDeleted();
                this.Save();
            }
        }

        public DataTable LoadByNewProgramIdAndItemId(int ItemId, int programId)
        {
            string query = String.Format(@"Select * from ProgramProduct where ItemID = {0} and ProgramID ={1}", ItemId,programId);
            this.LoadFromRawSql(query);
            return this.DataTable;
        }



        public DataTable LoadByOldProgramIdAndItemId(int ItemId, int previousprogid)
        {
            string query = String.Format(@"Select * from ProgramProduct where ItemID = {0} and ProgramID ={1}", ItemId, previousprogid);
            this.LoadFromRawSql(query);
            return this.DataTable;
        }
    }
}
