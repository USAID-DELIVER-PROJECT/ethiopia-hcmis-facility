//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PharmInventory.RRFTransactionService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
    [System.SerializableAttribute()]
    public partial class Order : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FormIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderApprovedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderCompletedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PharmInventory.RRFTransactionService.OrderDetail[] OrderDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderVerifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReportingPeriodIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RequestApprovedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RequestCompletedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RequestVerifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubmittedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SubmittedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplyChainUnitIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FormId {
            get {
                return this.FormIdField;
            }
            set {
                if ((this.FormIdField.Equals(value) != true)) {
                    this.FormIdField = value;
                    this.RaisePropertyChanged("FormId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderApprovedBy {
            get {
                return this.OrderApprovedByField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderApprovedByField, value) != true)) {
                    this.OrderApprovedByField = value;
                    this.RaisePropertyChanged("OrderApprovedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderCompletedBy {
            get {
                return this.OrderCompletedByField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderCompletedByField, value) != true)) {
                    this.OrderCompletedByField = value;
                    this.RaisePropertyChanged("OrderCompletedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PharmInventory.RRFTransactionService.OrderDetail[] OrderDetails {
            get {
                return this.OrderDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderDetailsField, value) != true)) {
                    this.OrderDetailsField = value;
                    this.RaisePropertyChanged("OrderDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderStatus {
            get {
                return this.OrderStatusField;
            }
            set {
                if ((this.OrderStatusField.Equals(value) != true)) {
                    this.OrderStatusField = value;
                    this.RaisePropertyChanged("OrderStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderTypeId {
            get {
                return this.OrderTypeIdField;
            }
            set {
                if ((this.OrderTypeIdField.Equals(value) != true)) {
                    this.OrderTypeIdField = value;
                    this.RaisePropertyChanged("OrderTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderVerifiedBy {
            get {
                return this.OrderVerifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderVerifiedByField, value) != true)) {
                    this.OrderVerifiedByField = value;
                    this.RaisePropertyChanged("OrderVerifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReportingPeriodId {
            get {
                return this.ReportingPeriodIdField;
            }
            set {
                if ((this.ReportingPeriodIdField.Equals(value) != true)) {
                    this.ReportingPeriodIdField = value;
                    this.RaisePropertyChanged("ReportingPeriodId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RequestApprovedDate {
            get {
                return this.RequestApprovedDateField;
            }
            set {
                if ((this.RequestApprovedDateField.Equals(value) != true)) {
                    this.RequestApprovedDateField = value;
                    this.RaisePropertyChanged("RequestApprovedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RequestCompletedDate {
            get {
                return this.RequestCompletedDateField;
            }
            set {
                if ((this.RequestCompletedDateField.Equals(value) != true)) {
                    this.RequestCompletedDateField = value;
                    this.RaisePropertyChanged("RequestCompletedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RequestVerifiedDate {
            get {
                return this.RequestVerifiedDateField;
            }
            set {
                if ((this.RequestVerifiedDateField.Equals(value) != true)) {
                    this.RequestVerifiedDateField = value;
                    this.RaisePropertyChanged("RequestVerifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubmittedBy {
            get {
                return this.SubmittedByField;
            }
            set {
                if ((object.ReferenceEquals(this.SubmittedByField, value) != true)) {
                    this.SubmittedByField = value;
                    this.RaisePropertyChanged("SubmittedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SubmittedDate {
            get {
                return this.SubmittedDateField;
            }
            set {
                if ((this.SubmittedDateField.Equals(value) != true)) {
                    this.SubmittedDateField = value;
                    this.RaisePropertyChanged("SubmittedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplyChainUnitId {
            get {
                return this.SupplyChainUnitIdField;
            }
            set {
                if ((this.SupplyChainUnitIdField.Equals(value) != true)) {
                    this.SupplyChainUnitIdField = value;
                    this.RaisePropertyChanged("SupplyChainUnitId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderDetail", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
    [System.SerializableAttribute()]
    public partial class OrderDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PharmInventory.RRFTransactionService.Adjustment[] AdjustmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BeginningBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PharmInventory.RRFTransactionService.DaysOutOfStock[] DaysOutOfStocksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EndingBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PharmInventory.RRFTransactionService.Expiry[] ExpiriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LossAdjustmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PharmaceuticalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QuantityIssuedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QuantityOrderedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QuantityReceivedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PharmInventory.RRFTransactionService.Adjustment[] Adjustments {
            get {
                return this.AdjustmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AdjustmentsField, value) != true)) {
                    this.AdjustmentsField = value;
                    this.RaisePropertyChanged("Adjustments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BeginningBalance {
            get {
                return this.BeginningBalanceField;
            }
            set {
                if ((this.BeginningBalanceField.Equals(value) != true)) {
                    this.BeginningBalanceField = value;
                    this.RaisePropertyChanged("BeginningBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PharmInventory.RRFTransactionService.DaysOutOfStock[] DaysOutOfStocks {
            get {
                return this.DaysOutOfStocksField;
            }
            set {
                if ((object.ReferenceEquals(this.DaysOutOfStocksField, value) != true)) {
                    this.DaysOutOfStocksField = value;
                    this.RaisePropertyChanged("DaysOutOfStocks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EndingBalance {
            get {
                return this.EndingBalanceField;
            }
            set {
                if ((this.EndingBalanceField.Equals(value) != true)) {
                    this.EndingBalanceField = value;
                    this.RaisePropertyChanged("EndingBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PharmInventory.RRFTransactionService.Expiry[] Expiries {
            get {
                return this.ExpiriesField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpiriesField, value) != true)) {
                    this.ExpiriesField = value;
                    this.RaisePropertyChanged("Expiries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LossAdjustment {
            get {
                return this.LossAdjustmentField;
            }
            set {
                if ((this.LossAdjustmentField.Equals(value) != true)) {
                    this.LossAdjustmentField = value;
                    this.RaisePropertyChanged("LossAdjustment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PharmaceuticalId {
            get {
                return this.PharmaceuticalIdField;
            }
            set {
                if ((this.PharmaceuticalIdField.Equals(value) != true)) {
                    this.PharmaceuticalIdField = value;
                    this.RaisePropertyChanged("PharmaceuticalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> QuantityIssued {
            get {
                return this.QuantityIssuedField;
            }
            set {
                if ((this.QuantityIssuedField.Equals(value) != true)) {
                    this.QuantityIssuedField = value;
                    this.RaisePropertyChanged("QuantityIssued");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> QuantityOrdered {
            get {
                return this.QuantityOrderedField;
            }
            set {
                if ((this.QuantityOrderedField.Equals(value) != true)) {
                    this.QuantityOrderedField = value;
                    this.RaisePropertyChanged("QuantityOrdered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> QuantityReceived {
            get {
                return this.QuantityReceivedField;
            }
            set {
                if ((this.QuantityReceivedField.Equals(value) != true)) {
                    this.QuantityReceivedField = value;
                    this.RaisePropertyChanged("QuantityReceived");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Adjustment", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
    [System.SerializableAttribute()]
    public partial class Adjustment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReasonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReasonId {
            get {
                return this.ReasonIdField;
            }
            set {
                if ((this.ReasonIdField.Equals(value) != true)) {
                    this.ReasonIdField = value;
                    this.RaisePropertyChanged("ReasonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeId {
            get {
                return this.TypeIdField;
            }
            set {
                if ((this.TypeIdField.Equals(value) != true)) {
                    this.TypeIdField = value;
                    this.RaisePropertyChanged("TypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DaysOutOfStock", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
    [System.SerializableAttribute()]
    public partial class DaysOutOfStock : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfDaysOutOfStockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StockOutReasonIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfDaysOutOfStock {
            get {
                return this.NumberOfDaysOutOfStockField;
            }
            set {
                if ((this.NumberOfDaysOutOfStockField.Equals(value) != true)) {
                    this.NumberOfDaysOutOfStockField = value;
                    this.RaisePropertyChanged("NumberOfDaysOutOfStock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StockOutReasonId {
            get {
                return this.StockOutReasonIdField;
            }
            set {
                if ((this.StockOutReasonIdField.Equals(value) != true)) {
                    this.StockOutReasonIdField = value;
                    this.RaisePropertyChanged("StockOutReasonId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Expiry", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
    [System.SerializableAttribute()]
    public partial class Expiry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BatchNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpiryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BatchNo {
            get {
                return this.BatchNoField;
            }
            set {
                if ((object.ReferenceEquals(this.BatchNoField, value) != true)) {
                    this.BatchNoField = value;
                    this.RaisePropertyChanged("BatchNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpiryDate {
            get {
                return this.ExpiryDateField;
            }
            set {
                if ((this.ExpiryDateField.Equals(value) != true)) {
                    this.ExpiryDateField = value;
                    this.RaisePropertyChanged("ExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubmitResult", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
    [System.SerializableAttribute()]
    public partial class SubmitResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OrderIsValidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PharmInventory.RRFTransactionService.ValidationMessage[] ValidationMessagesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OrderIsValid {
            get {
                return this.OrderIsValidField;
            }
            set {
                if ((this.OrderIsValidField.Equals(value) != true)) {
                    this.OrderIsValidField = value;
                    this.RaisePropertyChanged("OrderIsValid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PharmInventory.RRFTransactionService.ValidationMessage[] ValidationMessages {
            get {
                return this.ValidationMessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidationMessagesField, value) != true)) {
                    this.ValidationMessagesField = value;
                    this.RaisePropertyChanged("ValidationMessages");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidationMessage", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
    [System.SerializableAttribute()]
    public partial class ValidationMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PLITSFaultException", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
    [System.SerializableAttribute()]
    public partial class PLITSFaultException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PharmInventory.RRFTransactionService.PLITSFaultCode errorcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PharmInventory.RRFTransactionService.PLITSFaultCode errorcode {
            get {
                return this.errorcodeField;
            }
            set {
                if ((this.errorcodeField.Equals(value) != true)) {
                    this.errorcodeField = value;
                    this.RaisePropertyChanged("errorcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PLITSFaultCode", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
    public enum PLITSFaultCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OPERATION_ERROR = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SECURITY_ERROR = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INCORRECT_PARAMETER = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApprovedOrder", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
    [System.SerializableAttribute()]
    public partial class ApprovedOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PharmInventory.RRFTransactionService.ApprovedOrderDetail[] ApprovedOrderDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplyChainUnitIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PharmInventory.RRFTransactionService.ApprovedOrderDetail[] ApprovedOrderDetails {
            get {
                return this.ApprovedOrderDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ApprovedOrderDetailsField, value) != true)) {
                    this.ApprovedOrderDetailsField = value;
                    this.RaisePropertyChanged("ApprovedOrderDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplyChainUnitId {
            get {
                return this.SupplyChainUnitIdField;
            }
            set {
                if ((this.SupplyChainUnitIdField.Equals(value) != true)) {
                    this.SupplyChainUnitIdField = value;
                    this.RaisePropertyChanged("SupplyChainUnitId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApprovedOrderDetail", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
    [System.SerializableAttribute()]
    public partial class ApprovedOrderDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ApprovedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PharmaceuticalIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ApprovedQty {
            get {
                return this.ApprovedQtyField;
            }
            set {
                if ((this.ApprovedQtyField.Equals(value) != true)) {
                    this.ApprovedQtyField = value;
                    this.RaisePropertyChanged("ApprovedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PharmaceuticalId {
            get {
                return this.PharmaceuticalIdField;
            }
            set {
                if ((this.PharmaceuticalIdField.Equals(value) != true)) {
                    this.PharmaceuticalIdField = value;
                    this.RaisePropertyChanged("PharmaceuticalId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Issuance", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
    [System.SerializableAttribute()]
    public partial class Issuance : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApprovedOrderDetailIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateIssuedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityIssuedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApprovedOrderDetailId {
            get {
                return this.ApprovedOrderDetailIdField;
            }
            set {
                if ((this.ApprovedOrderDetailIdField.Equals(value) != true)) {
                    this.ApprovedOrderDetailIdField = value;
                    this.RaisePropertyChanged("ApprovedOrderDetailId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateIssued {
            get {
                return this.DateIssuedField;
            }
            set {
                if ((this.DateIssuedField.Equals(value) != true)) {
                    this.DateIssuedField = value;
                    this.RaisePropertyChanged("DateIssued");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuantityIssued {
            get {
                return this.QuantityIssuedField;
            }
            set {
                if ((this.QuantityIssuedField.Equals(value) != true)) {
                    this.QuantityIssuedField = value;
                    this.RaisePropertyChanged("QuantityIssued");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RRFTransactionService.IServiceOrder")]
    public interface IServiceOrder {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrder/SubmitFacilityOrders", ReplyAction="http://tempuri.org/IServiceOrder/SubmitFacilityOrdersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PharmInventory.RRFTransactionService.PLITSFaultException), Action="http://tempuri.org/IServiceOrder/SubmitFacilityOrdersPLITSFaultExceptionFault", Name="PLITSFaultException", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
        PharmInventory.RRFTransactionService.SubmitResult[] SubmitFacilityOrders(int SupplyChainUnitId, PharmInventory.RRFTransactionService.Order[] Orders, string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrder/GetFacilityApprovedOrdersCount", ReplyAction="http://tempuri.org/IServiceOrder/GetFacilityApprovedOrdersCountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PharmInventory.RRFTransactionService.PLITSFaultException), Action="http://tempuri.org/IServiceOrder/GetFacilityApprovedOrdersCountPLITSFaultExceptio" +
            "nFault", Name="PLITSFaultException", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
        int GetFacilityApprovedOrdersCount(int BranchId, string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrder/GetFacilityApprovedOrders", ReplyAction="http://tempuri.org/IServiceOrder/GetFacilityApprovedOrdersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PharmInventory.RRFTransactionService.PLITSFaultException), Action="http://tempuri.org/IServiceOrder/GetFacilityApprovedOrdersPLITSFaultExceptionFaul" +
            "t", Name="PLITSFaultException", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
        PharmInventory.RRFTransactionService.ApprovedOrder[] GetFacilityApprovedOrders(int BranchId, string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrder/ConfirmFacilityApprovedOrders", ReplyAction="http://tempuri.org/IServiceOrder/ConfirmFacilityApprovedOrdersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PharmInventory.RRFTransactionService.PLITSFaultException), Action="http://tempuri.org/IServiceOrder/ConfirmFacilityApprovedOrdersPLITSFaultException" +
            "Fault", Name="PLITSFaultException", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
        void ConfirmFacilityApprovedOrders(int BranchId, int[] Orderids, string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrder/SubmitFacilityIssues", ReplyAction="http://tempuri.org/IServiceOrder/SubmitFacilityIssuesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PharmInventory.RRFTransactionService.PLITSFaultException), Action="http://tempuri.org/IServiceOrder/SubmitFacilityIssuesPLITSFaultExceptionFault", Name="PLITSFaultException", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
        PharmInventory.RRFTransactionService.ValidationMessage[] SubmitFacilityIssues(int BranchId, PharmInventory.RRFTransactionService.Issuance[] Issuances, string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrder/SubmitBranchOrders", ReplyAction="http://tempuri.org/IServiceOrder/SubmitBranchOrdersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PharmInventory.RRFTransactionService.PLITSFaultException), Action="http://tempuri.org/IServiceOrder/SubmitBranchOrdersPLITSFaultExceptionFault", Name="PLITSFaultException", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
        PharmInventory.RRFTransactionService.SubmitResult[] SubmitBranchOrders(int SupplyChainUnitId, PharmInventory.RRFTransactionService.Order[] Orders, string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrder/GetBranchApprovedOrdersCount", ReplyAction="http://tempuri.org/IServiceOrder/GetBranchApprovedOrdersCountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PharmInventory.RRFTransactionService.PLITSFaultException), Action="http://tempuri.org/IServiceOrder/GetBranchApprovedOrdersCountPLITSFaultExceptionF" +
            "ault", Name="PLITSFaultException", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
        int GetBranchApprovedOrdersCount(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrder/GetBranchApprovedOrders", ReplyAction="http://tempuri.org/IServiceOrder/GetBranchApprovedOrdersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PharmInventory.RRFTransactionService.PLITSFaultException), Action="http://tempuri.org/IServiceOrder/GetBranchApprovedOrdersPLITSFaultExceptionFault", Name="PLITSFaultException", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
        PharmInventory.RRFTransactionService.ApprovedOrder[] GetBranchApprovedOrders(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrder/ConfirmBranchApprovedOrders", ReplyAction="http://tempuri.org/IServiceOrder/ConfirmBranchApprovedOrdersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PharmInventory.RRFTransactionService.PLITSFaultException), Action="http://tempuri.org/IServiceOrder/ConfirmBranchApprovedOrdersPLITSFaultExceptionFa" +
            "ult", Name="PLITSFaultException", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
        void ConfirmBranchApprovedOrders(int[] Orderids, string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrder/SubmitBranchIssues", ReplyAction="http://tempuri.org/IServiceOrder/SubmitBranchIssuesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PharmInventory.RRFTransactionService.PLITSFaultException), Action="http://tempuri.org/IServiceOrder/SubmitBranchIssuesPLITSFaultExceptionFault", Name="PLITSFaultException", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
        PharmInventory.RRFTransactionService.ValidationMessage[] SubmitBranchIssues(PharmInventory.RRFTransactionService.Issuance[] Issuances, string UserName, string Password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceOrderChannel : PharmInventory.RRFTransactionService.IServiceOrder, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceOrderClient : System.ServiceModel.ClientBase<PharmInventory.RRFTransactionService.IServiceOrder>, PharmInventory.RRFTransactionService.IServiceOrder {
        
        public ServiceOrderClient() {
        }
        
        public ServiceOrderClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceOrderClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceOrderClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceOrderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PharmInventory.RRFTransactionService.SubmitResult[] SubmitFacilityOrders(int SupplyChainUnitId, PharmInventory.RRFTransactionService.Order[] Orders, string UserName, string Password) {
            return base.Channel.SubmitFacilityOrders(SupplyChainUnitId, Orders, UserName, Password);
        }
        
        public int GetFacilityApprovedOrdersCount(int BranchId, string UserName, string Password) {
            return base.Channel.GetFacilityApprovedOrdersCount(BranchId, UserName, Password);
        }
        
        public PharmInventory.RRFTransactionService.ApprovedOrder[] GetFacilityApprovedOrders(int BranchId, string UserName, string Password) {
            return base.Channel.GetFacilityApprovedOrders(BranchId, UserName, Password);
        }
        
        public void ConfirmFacilityApprovedOrders(int BranchId, int[] Orderids, string UserName, string Password) {
            base.Channel.ConfirmFacilityApprovedOrders(BranchId, Orderids, UserName, Password);
        }
        
        public PharmInventory.RRFTransactionService.ValidationMessage[] SubmitFacilityIssues(int BranchId, PharmInventory.RRFTransactionService.Issuance[] Issuances, string UserName, string Password) {
            return base.Channel.SubmitFacilityIssues(BranchId, Issuances, UserName, Password);
        }
        
        public PharmInventory.RRFTransactionService.SubmitResult[] SubmitBranchOrders(int SupplyChainUnitId, PharmInventory.RRFTransactionService.Order[] Orders, string UserName, string Password) {
            return base.Channel.SubmitBranchOrders(SupplyChainUnitId, Orders, UserName, Password);
        }
        
        public int GetBranchApprovedOrdersCount(string UserName, string Password) {
            return base.Channel.GetBranchApprovedOrdersCount(UserName, Password);
        }
        
        public PharmInventory.RRFTransactionService.ApprovedOrder[] GetBranchApprovedOrders(string UserName, string Password) {
            return base.Channel.GetBranchApprovedOrders(UserName, Password);
        }
        
        public void ConfirmBranchApprovedOrders(int[] Orderids, string UserName, string Password) {
            base.Channel.ConfirmBranchApprovedOrders(Orderids, UserName, Password);
        }
        
        public PharmInventory.RRFTransactionService.ValidationMessage[] SubmitBranchIssues(PharmInventory.RRFTransactionService.Issuance[] Issuances, string UserName, string Password) {
            return base.Channel.SubmitBranchIssues(Issuances, UserName, Password);
        }
    }
}
